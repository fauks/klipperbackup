##############################################################
##################  Anycubic Vyper Macros  ###################
##############################################################

###########################################################################################################################   PAUSE
[gcode_macro PAUSE]
description: Pause current print job
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(1) %}      #edit to your park position
    {% set y = params.Y|default(1) %}      #edit to your park position
    {% set z = params.Z|default(50)|float %} #edit to your park position
    {% set e = params.E|default(4) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

###########################################################################################################################   RESUME
[gcode_macro RESUME]
description: Resume current print job
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(4) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}

###########################################################################################################################   CANCEL_PRINT
[gcode_macro CANCEL_PRINT]
description: Cancel the current print job
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    G91                  ;Relative
    G1 E-1 F3000         ;Retract
    G1 Z5 F4500          ;Lift Z 
    G90                  ;Absolute
    G1 X0 Y220 F5000     ;Move X over and move bed forward
    CANCEL_PRINT_BASE

###########################################################################################################################   PREPARE_PRINT
[gcode_macro PREPARE_PRINT] 
gcode:
    {% set t_bed = params.T_BED|default(0) %}
    {% set duration = params.DURATION|default(0) %}

    HEAT_SOAK TARGET={t_bed} DURATION={duration} #Start heat soak

###########################################################################################################################   START_PRINT
[gcode_macro START_PRINT]
gcode:
    {% set t_bed = params.T_BED|default(0) %}
    {% set t_extruder = params.T_EXTRUDER|default(0) %}

    M109 S140                                #Extruder Heat Up Standby Mode
    M190 S{t_bed}                            #Heat Up Bed
    M117 Heating...
    _CG28                                    #Home if needed
    #Z_TILT_ADJUST                            #Perform Z_TILT_ADJUST                                     
    M83                                      #Extruder Relative Mode 
    BED_MESH_CALIBRATE PROFILE=default
    G1 X0 Y0 F5000                           #Move To Front Left Corner
    M117 Extruder heating to printing temp
    M109 S{t_extruder}                       #Extruder Heat Up Target Temp
    G92 E0                                   #Reset Extruder
    G90                                      #Absolut Positioning
    BED_MESH_PROFILE LOAD=default
    M117 Primeline
    PRIME_LINE                               #First Move
    G90 ;absolute positioning
    M82 ;set extruder to absolute mode
    M300
    M117 Printing!

###########################################################################################################################   PRIME_LINE
[gcode_macro PRIME_LINE]
gcode:
    G1 X2 Y2 F4500                 ;Move To Front Left Corner
    G0 Z0.9                          ;Drop Down To Bed
    G92 E0                         ;Reset Extruder
    G1 X100 E40 F500               ;Extrude First Line
    G1 Z1 F4500                  ;Move Up For Second Line
    G1 X25 E32 F500                ;Extrude Second Line
    G1 E-0.7 F3000                 ;Retract 
    G92 E0                         ;Reset Extruder
    G1 Z10 F4500                   ;Move Up In Z

###########################################################################################################################   HEAT_SOAK
[gcode_macro HEAT_SOAK]
description: heats the bed for a while
 
variable_target_temp: 0
variable_stage: None ## heating -> soaking -> done -> None
 
## in seconds
variable_check_interval: 10
variable_soak_time_remaining: 0
variable_total_time_elapsed: 0
 
gcode:
    {% set TARGET = params.TARGET | default(0) | float %}
    {% set DURATION = (params.DURATION | default(5) | int) * 60 %} ## minutes to seconds
 
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE={ TARGET }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage               VALUE="'heating'"
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ DURATION }
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
 
    ;; fire up the heaters
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={ TARGET }
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=140
    POWER_ON_CHAMBER_HEATER
 
    ;; run the fan to circulate air
    _SET_FAN_SPEED PERCENT=60
 
    ;; put the bed and nozzle where they're a safe distance apart
    G28
    CENTER
 
    M84 ;; turn off steppers
 
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ check_interval }

    ;; pause the print during heat soak
    PAUSE_BASE

###########################################################################################################################   heat_soaker
[delayed_gcode heat_soaker]
; ## debug
; { action_respond_info( printer['gcode_macro HEAT_SOAK'] | tojson )}
gcode:
    {% set heat_soak = printer['gcode_macro HEAT_SOAK'] %}
 
    ## update total time elapsed
    {% set total_time_elapsed = heat_soak.total_time_elapsed + heat_soak.check_interval %}
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed VALUE={ total_time_elapsed }
 
    {% set stage = heat_soak.stage %}
    {% if stage == "heating" and printer.heater_bed.temperature >= heat_soak.target_temp %}
        {% set stage = "soaking" %}
    {% endif %}
 
    {% if stage == "soaking" %}
        ## update soak countdown
        {% set soak_time_remaining = [heat_soak.soak_time_remaining - heat_soak.check_interval, 0] | max %}
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE={ soak_time_remaining }
 
        {% if soak_time_remaining == 0 %}
            {% set stage = "done" %}
        {% endif %}
    {% endif %}
 
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'{ stage }'"
 
    {% if stage in ("done", "cancel") %}
 
        {% if stage == "cancel" %}
            {% set stage = "done" %}
            TURN_OFF_HEATERS
            POWER_OFF_CHAMBER_HEATER
            CANCEL_PRINT
            M107 ; turn off fan
            M117 { "soak cancelled after ~%.1fm" | format(total_time_elapsed / 60.0) }

        {% else %}
            M117 { "soak complete after %.1fm" | format(total_time_elapsed / 60.0) }
             ;; resume / start the print
            RESUME_BASE
            POWER_OFF_CHAMBER_HEATER
            M107 ; turn off fan
        {% endif %}
 
        ## reset all state vars, except stage, which may be queried via the api
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=target_temp         VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=soak_time_remaining VALUE=0
        SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=total_time_elapsed  VALUE=0
 
    {% else %}
 
        {% if total_time_elapsed % 90 == 0 %}
            ## output status periodically
            {% if stage == "heating" %}
                M117 { "heating -- %.1fm elapsed" | format(total_time_elapsed / 60.0) }
            {% elif stage == "soaking" %}
                M117 { "soaking -- %.1fm remaining" | format(soak_time_remaining / 60.0) }
            {% endif %}
        {% endif %}
 
        ## trigger ourselves again
        UPDATE_DELAYED_GCODE ID=heat_soaker DURATION={ heat_soak.check_interval }
 
        ## dwell for 1ms to prevent from going idle
        G4 P1
 
    {% endif %}

###########################################################################################################################   CANCEL_HEAT_SOAK
[gcode_macro CANCEL_HEAT_SOAK]
description: cancels an in-progress HEAT_SOAK cycle
gcode:
    SET_GCODE_VARIABLE MACRO=HEAT_SOAK VARIABLE=stage VALUE="'cancel'"
    UPDATE_DELAYED_GCODE ID=heat_soaker DURATION=1

###########################################################################################################################   REMOVE_FILAMENT
[gcode_macro REMOVE_FILAMENT]
gcode:
    G28
    M109 S220
    M83
    G1 E3 F100
    M83
    G1 E-50 F1200
    M83
    G1 E-50 F1400
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600
    M83
    G1 E-50 F1600

###########################################################################################################################   ADD_FILAMENT
[gcode_macro ADD_FILAMENT]
gcode:
    G28
    M109 S220
    M83
    G1 E50 F1000
    M83
    G1 E50 F1200
    M83
    G1 E50 F1200
    M83
    G1 E50 F1200
    M83
    G1 E50 F1200
    M83
    G1 E50 F1200
    M83
    G1 E50 F1200
    M83
    G1 E50 F400
    M83
    G1 E50 F250

###########################################################################################################################   POWER_OFF_PRINTER
[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="Vyper",
                             state="off")}

###########################################################################################################################   POWER_OFF_CHAMBER_HEATER
[gcode_macro POWER_OFF_CHAMBER_HEATER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="chamber_heater",
                             state="off")}

###########################################################################################################################   POWER_ON_CHAMBER_HEATER
[gcode_macro POWER_ON_CHAMBER_HEATER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="chamber_heater",
                             state="ON")}


###########################################################################################################################   delayed_printer_off
[delayed_gcode delayed_printer_off]
initial_duration: 0
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

###########################################################################################################################   idle_timeout
[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=30

###########################################################################################################################   _CG28
[gcode_macro _CG28]
description: Conditional homing
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}

###########################################################################################################################   M900
[gcode_macro M900] #Pressure Advance 
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

###########################################################################################################################   _SET_FAN_SPEED
[gcode_macro _SET_FAN_SPEED]
gcode:
    M106 S{ (params.PERCENT | float) * 255 / 100 }

###########################################################################################################################   CENTER
[gcode_macro CENTER]
gcode:
    G90
    G0 X{ printer.toolhead.axis_maximum.x/2 } Y{ printer.toolhead.axis_maximum.y/2 } Z{ printer.toolhead.axis_maximum.z/2 } F5000

[gcode_macro M300]
gcode:
    {% set tones = [1000, 1500, 2000, 2500, 3000, 2500, 2000, 1500, 1000] %} ; S sets the tone frequency
    {% for count in tones %}
    {% set cytime = 1 / count %}
    SET_PIN PIN=beeper_pin VALUE={0.5} CYCLE_TIME={cytime} ;Play tone
    G4 P50 ;tone duration
    SET_PIN PIN=beeper_pin VALUE=0
    {% endfor %}